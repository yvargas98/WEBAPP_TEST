[{"C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\index.tsx":"1","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\reportWebVitals.ts":"2","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\App.tsx":"3","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\routes.tsx":"4","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Views\\Unauthorized.tsx":"5","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Views\\NotFound404.tsx":"6","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Views\\Login.tsx":"7","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Views\\API\\company.ts":"8","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Util\\enviroment.ts":"9","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Components\\CustomRoutes\\AppLayoutRoute.tsx":"10","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Util\\validations.ts":"11"},{"size":544,"mtime":1608440143273,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":331,"mtime":1608445037438,"results":"15","hashOfConfig":"13"},{"size":709,"mtime":1608488535230,"results":"16","hashOfConfig":"13"},{"size":187,"mtime":1608444507622,"results":"17","hashOfConfig":"13"},{"size":21272,"mtime":1608444078856,"results":"18","hashOfConfig":"13"},{"size":2943,"mtime":1608454160644,"results":"19","hashOfConfig":"13"},{"size":290,"mtime":1608456285838,"results":"20","hashOfConfig":"13"},{"size":117,"mtime":1608450208572,"results":"21","hashOfConfig":"13"},{"size":2137,"mtime":1608488384862,"results":"22","hashOfConfig":"13"},{"size":773,"mtime":1608488108289,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"9cy79n",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\index.tsx",[],["49","50"],"C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\reportWebVitals.ts",[],"C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\App.tsx",[],"C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\routes.tsx",[],"C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Views\\Unauthorized.tsx",[],"C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Views\\NotFound404.tsx",[],"C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Views\\Login.tsx",["51","52"],"import { FC, FormEvent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Helmet } from \"react-helmet\";\r\nimport company from './API/company';\r\nimport cookie from 'js-cookie';\r\n\r\nconst LoginView: FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showErrorMessages, setShowErrorMessages] = useState(false);\r\n  const [authenticationFail, setAuthenticationFail] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  //window.scrollTo(0, 0);\r\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setShowErrorMessages(true);\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await company.post('/authentication/login', {\r\n        email,\r\n        password,\r\n      }, { responseType: 'text'});\r\n      cookie.set('token', data);\r\n      company.defaults.headers['Authorization'] = `Bearer ${cookie.get('token')}`;\r\n      history.push('/');\r\n    } catch {\r\n      setAuthenticationFail(true);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <link rel=\"stylesheet\" href=\"login.css\"/>\r\n      </Helmet>\r\n      <section className=\"login-block\">\r\n        <div className=\"container\">\r\n          <div className=\"row \">\r\n            <div className=\"col login-sec\">\r\n              <h2 className=\"text-center\">Login Company</h2>\r\n              <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                {\r\n                  authenticationFail ? (\r\n                    <div className=\"alert alert-danger\">\r\n                      Imposible Authenticate!\r\n                    </div>\r\n                  ) : null\r\n                }\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputEmail1\" className=\"text-uppercase\">Email</label>\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required={true}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputPassword1\" className=\"text-uppercase\">Password</label>\r\n                  <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value= {password} onChange={(e) => setPassword(e.target.value)} required={true}/>\r\n                </div>\r\n                <div className=\"form-check\">\r\n                  <label className=\"form-check-label\">\r\n                    <input type=\"checkbox\" className=\"form-check-input\"/>\r\n                    <small>Remember Me</small>\r\n                  </label>\r\n                  <button type=\"submit\" className=\"btn btn-login float-right\">Submit</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginView;","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Views\\API\\company.ts",[],"C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Util\\enviroment.ts",["53"],"C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Components\\CustomRoutes\\AppLayoutRoute.tsx",["54"],"import {\r\n  Route, Redirect, RouteProps, NavLink, Link,\r\n} from 'react-router-dom';\r\n\r\nimport { isAuthenticated, isAdmin } from '../../Util/validations';\r\n\r\nconst PrivateRoute = (props: RouteProps) => {\r\n  const {\r\n    component, exact, location,\r\n    path, render, sensitive, strict,\r\n  } = props;\r\n\r\n  if(!isAuthenticated()){\r\n    if(location?.pathname === '/'){\r\n      return (\r\n        <Redirect to={{pathname: '/login'}}/>\r\n      );\r\n    }\r\n    return (\r\n      <Redirect to={{pathname: '/403'}}/>\r\n    );\r\n  }\r\n  if (location?.pathname === '/') {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/Posts',\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <NavLink \r\n                  activeClassName=\"nav-link active\"\r\n                  to=\"/Posts\"\r\n                >Posts</NavLink>\r\n                {/*<a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>*/}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  activeClassName=\"nav-link\"\r\n                  to=\"/Categories\"\r\n                ></NavLink>\r\n                {/*<a className=\"nav-link\" href=\"#\">Features</a>*/}\r\n              </li>\r\n              {\r\n                isAdmin() && \r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    activeClassName=\"nav-link\"\r\n                    to=\"/Users\"\r\n                  ></NavLink>\r\n                  {/*<a className=\"nav-link\" href=\"#\">Pricing</a>*/}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <Route\r\n        component={component}\r\n        exact={exact}\r\n        location={location}\r\n        path={path}\r\n        render={render}\r\n        sensitive={sensitive}\r\n        strict={strict}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","C:\\Users\\Gerson\\Documents\\Test\\webapp_test\\src\\Util\\validations.ts",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":10,"column":10,"nodeType":"61","messageId":"62","endLine":10,"endColumn":27},{"ruleId":"59","severity":1,"message":"63","line":12,"column":10,"nodeType":"61","messageId":"62","endLine":12,"endColumn":17},{"ruleId":"64","severity":1,"message":"65","line":1,"column":1,"nodeType":"66","endLine":4,"endColumn":3},{"ruleId":"59","severity":1,"message":"67","line":2,"column":41,"nodeType":"61","messageId":"62","endLine":2,"endColumn":45},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'showErrorMessages' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]